<<<<<<< HEAD
// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    	DMux8Way(in=load, sel=address[6..8], a=Load0, b=Load1, c=Load2, d=Load3, e=Load4, f=Load5, g=Load6, h=Load7);
    	RAM64(in=in, load=Load0, address=address[0..5], out=RAM0);
    	RAM64(in=in, load=Load1, address=address[0..5], out=RAM1);
    	RAM64(in=in, load=Load2, address=address[0..5], out=RAM2);
    	RAM64(in=in, load=Load3, address=address[0..5], out=RAM3);
    	RAM64(in=in, load=Load4, address=address[0..5], out=RAM4);
    	RAM64(in=in, load=Load5, address=address[0..5], out=RAM5);
    	RAM64(in=in, load=Load6, address=address[0..5], out=RAM6);
    	RAM64(in=in, load=Load7, address=address[0..5], out=RAM7);
    	Mux8Way16(a=RAM0, b=RAM1, c=RAM2, d=RAM3, e=RAM4, f=RAM5, g=RAM6, h=RAM7, sel=address[6..8], out=out);
=======
// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    	DMux8Way(in=load, sel=address[6..8], a=Load0, b=Load1, c=Load2, d=Load3, e=Load4, f=Load5, g=Load6, h=Load7);
    	RAM64(in=in, load=Load0, address=address[0..5], out=RAM0);
    	RAM64(in=in, load=Load1, address=address[0..5], out=RAM1);
    	RAM64(in=in, load=Load2, address=address[0..5], out=RAM2);
    	RAM64(in=in, load=Load3, address=address[0..5], out=RAM3);
    	RAM64(in=in, load=Load4, address=address[0..5], out=RAM4);
    	RAM64(in=in, load=Load5, address=address[0..5], out=RAM5);
    	RAM64(in=in, load=Load6, address=address[0..5], out=RAM6);
    	RAM64(in=in, load=Load7, address=address[0..5], out=RAM7);
    	Mux8Way16(a=RAM0, b=RAM1, c=RAM2, d=RAM3, e=RAM4, f=RAM5, g=RAM6, h=RAM7, sel=address[6..8], out=out);
>>>>>>> refs/remotes/origin/master
}