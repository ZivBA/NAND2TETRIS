// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
        DMux8Way(in=load, sel=address[11..13], a=Load0, b=Load1, c=Load2, d=Load3, e=Load4, f=Load5, g=Load6, h=Load7);
    	RAM4K(in=in, load=Load0, address=address[0..11], out=RAM0);
    	RAM4K(in=in, load=Load1, address=address[0..11], out=RAM1);
    	RAM4K(in=in, load=Load2, address=address[0..11], out=RAM2);
    	RAM4K(in=in, load=Load3, address=address[0..11], out=RAM3);
    	RAM4K(in=in, load=Load4, address=address[0..11], out=RAM4);
    	RAM4K(in=in, load=Load5, address=address[0..11], out=RAM5);
    	RAM4K(in=in, load=Load6, address=address[0..11], out=RAM6);
    	RAM4K(in=in, load=Load7, address=address[0..11], out=RAM7);
    	Mux8Way16(a=RAM0, b=RAM1, c=RAM2, d=RAM3, e=RAM4, f=RAM5, g=RAM6, h=RAM7, sel=address[11..13], out=out);
}